#include <iostream>
#include <vector>
using namespace std;

int countWays(int coins[], int n, int sum) {
    vector<int> dp(sum + 1, 0);
    dp[0] = 1; // There's one way to make the sum 0: use no coins.

    // Update dp[] for each coin
    for (int i = 0; i < n; i++) {
        for (int j = coins[i]; j <= sum; j++) {
            dp[j] += dp[j - coins[i]];
        }
    }
    return dp[sum];
}

int main() {
    int coins1[] = {1, 2, 3};
    int sum1 = 4;
    int n1 = sizeof(coins1) / sizeof(coins1[0]);
    cout << "Number of ways to make sum " << sum1 << ": " << countWays(coins1, n1, sum1) << endl;

    int coins2[] = {2, 5, 3, 6};
    int sum2 = 10;
    int n2 = sizeof(coins2) / sizeof(coins2[0]);
    cout << "Number of ways to make sum " << sum2 << ": " << countWays(coins2, n2, sum2) << endl;

    return 0;
}
