#include <iostream>
#include <vector>
using namespace std;

int countWays(int coins[], int n, int sum) {
    vector<int> dp(sum + 1, 0);
    dp[0] = 1; // There's one way to make the sum 0: use no coins.

    // Update dp[] for each coin
    for (int i = 0; i < n; i++) {
        for (int j = coins[i]; j <= sum; j++) {
            dp[j] += dp[j - coins[i]];
        }
    }
    return dp[sum];
}

int main() {
    int n, sum;

    // Input the number of coins
    cout << "Enter the number of coins: ";
    cin >> n;

    int* coins = new int[n]; // Dynamic array for coin denominations

    // Input the coin denominations
    cout << "Enter the coin denominations: ";
    for (int i = 0; i < n; i++) {
        cin >> coins[i];
    }

    // Input the target sum
    cout << "Enter the target sum: ";
    cin >> sum;

    // Output the result
    cout << "Number of ways to make sum " << sum << ": " << countWays(coins, n, sum) << endl;

    // Free dynamically allocated memory
    delete[] coins;

    return 0;
}
